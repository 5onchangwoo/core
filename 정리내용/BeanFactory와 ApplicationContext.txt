<<interface>> BeanFactory
 -스프링 컨테이너의 최상위 인터페이스
 -스프링 빈을 관리하고 조회하는 역할
 -'getBean()'을 제공
 -지금까지 우리가 사용했던 대부분의 기능을 제공

<<interface>> ApplicationContext
 -BeanFactory 기능을 모두 상속받아서 제공
 -애플리케이션을 개발할 때는 빈을 관리하고 조회하는 기능에 추가적으로 수 많은 부가기능을 제공
 -추가적으로 상속받는 기능들
  1.<<interface>> MessageSource
    : 메시지소스를 활용한 국제화 기능(한국에서 들어오면 한국어로, 영어권에서 들어오면 영어로 출력)
  2.<<interface>> Environmentcapble
    : 환경변수 기능(로컬, 개발, 운영등을 구분해서 처리)
  3.<<interface>> ApplicationEventPublisher
    : 애플리케이션 이벤트(이벤트를 발행하고 구독하는 모델을 관리하게 지원)
  4.<<interface>> ResouceLoader
    : 편리한 리소스조회(파일, 클래스패스, 외부 등에서 리소스를 관리하게 조회)
  -따라서 부가기능이 있는 ApplicationContecxt를 주로 사용함.
  -BeanFactory나 ApplicationContext를 스프링 컨테이너라 부름

---다양한 설정 형식 지원 - 자바, XML등
AnnotationConfig ApplicationContext -> AppConfig.class
 : 스프링 부트의 등장으로 최근 많이 사용함.
GenericXml ApplicationContext -> appConfig.xml
 : 최근에는 스프링부트로인해 잘 사용하지 않음.
 컴파일 없이 빈 설정 정보를 변경할 수 있음
Xxx ApplicationContext appConfig.xxx (사용자 지정 형식으로 사용가능)